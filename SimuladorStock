import random
import tkinter # Parte del gui
import customtkinter #Parte del gui

def definir_demanda_dia():
    # Mediante un RND define la demanda (decenas vendidas) en el día

    
    #Probabilidades
    #Deben ser parametrizables
    pd0 = 0.05  # 0 decenas (se vendieron ese día) 
    pd10 = 0.12 # 10 decenas
    pd20 = 0.18 # 20 decenas
    pd30 = 0.25 # 30 decenas 
    pd40 = 0.22 # 40 decenas
    pd50 = 0.18 # 50 decenas
    
    # Probabilidades acumuladas
    pd10acu = pd0+pd10
    pd20acu = pd10acu + pd20
    pd30acu = pd20acu + pd30
    pd40acu = pd30acu + pd40
    
    #Random para la demanda
    rnd_demanda = random.random()

    # Lista com probabilidades acumuladas y lista de demanda
    demanda_probabilidad_acumulada = [pd0, pd10acu, pd20acu, pd30acu, pd40acu, 1]
    demanda = [0, 10, 20, 30, 40, 50]
    
    
    # Si rnd es menor a probabilidad acumulada, entonces esa es la demanda.
    for i in range(len(demanda_probabilidad_acumulada)):
        if rnd_demanda < (demanda_probabilidad_acumulada[i]):
            demanda = demanda[i]
            break
        
    return demanda

def definir_demora():
    #Mediante un RND, calcula la demora (en días) del pedido

    #demora_probabilidad_días (demora_probabilidad_día1 = 0.15 = 15%)
    
    # Debe ser parametrizable
    dp1 = 0.15
    dp2 = 0.20
    dp3 = 0.40
    dp4 = 0.25

    demora_probabilidad = [dp1, dp2, dp3, dp4]
    dp2acu = dp1+dp2
    dp3acu = dp2acu + dp3
    
    demora_probabilidad_acumulada = [dp1, dp2acu, dp3acu, 1]
    lista_demora = [1, 2, 3, 4]

    rnd_demora = random.random()

    # Si rnd es menor a probabilidad acumulada, entonces esa es la demora.
    for i in range(len(demora_probabilidad_acumulada)):
        if rnd_demora < (demora_probabilidad_acumulada[i]):
            demora = lista_demora[i]
            break
        
    return demora

def definir_costo_pedido(decenas):
    #Le introducis las decenas pedidas y te devuelve el costo del pedido

    #Debe ser parametrizable
    cp1 = 2000
    cp2 = 2800
    cp3 = 3000

    # Si se piden 100 decenas, se usa costo de pedido 1
    if decenas <= 100:
        return cp1

    # Si se piden 101-200 decenas, se usa cp2
    if 101 < decenas < 200:
        return cp2
    
    # Mas de 200 decenas, se usa cp3
    if decenas > 200:
        return cp3
    
def politica_a():
    
    si = 20 # Stock Inicial
    km = 30 # Costo de mantenimiento/almacenamiento
    ks = 40 # Costo por escasez/ruptura
    q = int(pedidos.get()) # Tamaño de pedido (DEBE SER PARAMETRIZABLE)
    
    cont_dias = 0
    
    
    for i in range(n):
        
        if cont_dias%7 == 0 or cont_dias == 0:
            #Realizar pedido
            demora = definir_demora()
            
        
        demanda = definir_demanda_dia()
        if cont_dias == 0:
            si = 20
        
        restante = si - demanda
        if restante >= 0:
            km_dia = restante*30
        else:
            ks_dia = restante*40
        
        costo_dia = ks_dia + km_dia + precio_q_dia

        cont_dias +=1

def borrar():
    tiempo.delete(0,"end")
    q_filas.delete(0,"end")
    hora.delete(0,"end")
    iteraciones.delete(0,"end")

def default():
    #Elimina valores anteriores
    pd0.delete(0,"end")
    pd10.delete(0,"end")
    pd20.delete(0,"end")
    pd30.delete(0,"end")
    pd40.delete(0,"end")
    pd50.delete(0,"end")
    dp1.delete(0,"end")
    dp2.delete(0,"end")
    dp3.delete(0,"end")
    dp4.delete(0,"end")
    cp1.delete(0,"end")
    cp2.delete(0,"end")
    cp3.delete(0,"end")
    #Se insertan los valores por defecto del pdf 
    pd0.insert(0,0.05)
    pd10.insert(0,0.12)
    pd20.insert(0,0.18)
    pd30.insert(0,0.25)
    pd40.insert(0,0.22)
    pd50.insert(0,0.18)
    dp1.insert(0,0.15)
    dp2.insert(0,0.20)
    dp3.insert(0,0.40)
    dp4.insert(0,0.25)
    cp1.insert(0,2000)
    cp2.insert(0,2800)
    cp3.insert(0,3000)



#GUI
customtkinter.set_appearance_mode("DARK")
customtkinter.set_default_color_theme("dark-blue")

app = customtkinter.CTk() #Creo ventana
app.title("Grupo 11 - Trabajo Práctico 3 'Simulación de Montecarlo'")
app.geometry("1100x500")  #Establezco dimensiones
app.resizable(0,0)  #Deshabilita maximizar ventana

#Frames
inputs_frame = customtkinter.CTkFrame(master=app,height=300)
inputs_frame.place(relx=0.1,rely=0.40,anchor=tkinter.CENTER)

simu_frame = customtkinter.CTkFrame(master=app,height=100,width=1080)
simu_frame.place(relx=0.5,rely=0.85,anchor=tkinter.CENTER)

#inputs

tiempo = customtkinter.CTkEntry(inputs_frame,width=100,height=40,text_color="red")
tiempo.place(relx=0.7,rely=0.2,anchor=tkinter.CENTER)

q_filas = customtkinter.CTkEntry(inputs_frame,width=100,height=40,text_color="red")
q_filas.place(relx=0.7,rely=0.35,anchor=tkinter.CENTER)

hora =  customtkinter.CTkEntry(inputs_frame,width=100,height=40,text_color="red")
hora.place(relx=0.7,rely=0.50,anchor=tkinter.CENTER)

iteraciones =  customtkinter.CTkEntry(inputs_frame,width=100,height=40,text_color="red")
iteraciones.place(relx=0.7,rely=0.65,anchor=tkinter.CENTER)

#Demanda
pd0 = customtkinter.CTkEntry(app,width=100,height=20,text_color="red")
pd0.place(relx=0.4,rely=0.31,anchor=tkinter.CENTER)
pd10 = customtkinter.CTkEntry(app,width=100,height=20,text_color="red")
pd10.place(relx=0.5,rely=0.31,anchor=tkinter.CENTER)
pd20 = customtkinter.CTkEntry(app,width=100,height=20,text_color="red")
pd20.place(relx=0.6,rely=0.31,anchor=tkinter.CENTER)
pd30 = customtkinter.CTkEntry(app,width=100,height=20,text_color="red")
pd30.place(relx=0.7,rely=0.31,anchor=tkinter.CENTER)
pd40 = customtkinter.CTkEntry(app,width=100,height=20,text_color="red")
pd40.place(relx=0.8,rely=0.31,anchor=tkinter.CENTER)
pd50 = customtkinter.CTkEntry(app,width=100,height=20,text_color="red")
pd50.place(relx=0.9,rely=0.31,anchor=tkinter.CENTER)

#Demora
dp1 = customtkinter.CTkEntry(app,width=100,height=20,text_color="red")
dp1.place(relx=0.4,rely=0.47,anchor=tkinter.CENTER)
dp2= customtkinter.CTkEntry(app,width=100,height=20,text_color="red")
dp2.place(relx=0.5,rely=0.47,anchor=tkinter.CENTER)
dp3 = customtkinter.CTkEntry(app,width=100,height=20,text_color="red")
dp3.place(relx=0.6,rely=0.47,anchor=tkinter.CENTER)
dp4 = customtkinter.CTkEntry(app,width=100,height=20,text_color="red")
dp4.place(relx=0.7,rely=0.47,anchor=tkinter.CENTER)

#Decenas pedidas
cp1 = customtkinter.CTkEntry(app,width=100,height=20,text_color="red")
cp1.place(relx=0.4,rely=0.67,anchor=tkinter.CENTER)
cp2= customtkinter.CTkEntry(app,width=100,height=20,text_color="red")
cp2.place(relx=0.5,rely=0.67,anchor=tkinter.CENTER)
cp3 = customtkinter.CTkEntry(app,width=100,height=20,text_color="red")
cp3.place(relx=0.6,rely=0.67,anchor=tkinter.CENTER)

#Plan A
pedidos = customtkinter.CTkEntry(simu_frame,text_color="red",height=35,width=100)
pedidos.place(relx=0.5,rely=0.25,anchor=tkinter.CENTER)


#Textos
customtkinter.CTkLabel(inputs_frame, text="Tiempo").place(relx=0.18,rely=0.2,anchor=tkinter.CENTER)
customtkinter.CTkLabel(inputs_frame, text="Q.Filas").place(relx=0.18,rely=0.35,anchor=tkinter.CENTER)
customtkinter.CTkLabel(inputs_frame, text="Horas").place(relx=0.18,rely=0.5,anchor=tkinter.CENTER)
customtkinter.CTkLabel(inputs_frame, text="Iteraciones").place(relx=0.18,rely=0.65,anchor=tkinter.CENTER)

customtkinter.CTkLabel(app,text="Probabilidades Generales",height=35,width=600).place(relx=0.5,rely=0.15,anchor=tkinter.CENTER)

customtkinter.CTkLabel(app,text="Demanda x día (en decenas)",height=35,width=10).place(relx=0.3,rely=0.25,anchor=tkinter.CENTER)
customtkinter.CTkLabel(app,text="Probabilidad",height=35,width=10).place(relx=0.3,rely=0.31,anchor=tkinter.CENTER)
customtkinter.CTkLabel(app,text="0",height=35,width=10).place(relx=0.4,rely=0.25,anchor=tkinter.CENTER)
customtkinter.CTkLabel(app,text="10",height=35,width=10).place(relx=0.5,rely=0.25,anchor=tkinter.CENTER)
customtkinter.CTkLabel(app,text="20",height=35,width=10).place(relx=0.6,rely=0.25,anchor=tkinter.CENTER)
customtkinter.CTkLabel(app,text="30",height=35,width=10).place(relx=0.7,rely=0.25,anchor=tkinter.CENTER)
customtkinter.CTkLabel(app,text="40",height=35,width=10).place(relx=0.8,rely=0.25,anchor=tkinter.CENTER)
customtkinter.CTkLabel(app,text="50",height=35,width=10).place(relx=0.9,rely=0.25,anchor=tkinter.CENTER)

customtkinter.CTkLabel(app,text="Demora (en días)",height=35,width=10).place(relx=0.3,rely=0.41,anchor=tkinter.CENTER)
customtkinter.CTkLabel(app,text="Probabilidad",height=35,width=10).place(relx=0.3,rely=0.47,anchor=tkinter.CENTER)
customtkinter.CTkLabel(app,text="1",height=35,width=10).place(relx=0.4,rely=0.41,anchor=tkinter.CENTER)
customtkinter.CTkLabel(app,text="2",height=35,width=10).place(relx=0.5,rely=0.41,anchor=tkinter.CENTER)
customtkinter.CTkLabel(app,text="3",height=35,width=10).place(relx=0.6,rely=0.41,anchor=tkinter.CENTER)
customtkinter.CTkLabel(app,text="4",height=35,width=10).place(relx=0.7,rely=0.41,anchor=tkinter.CENTER)

customtkinter.CTkLabel(app,text="Decenas pedidas",height=35,width=10).place(relx=0.3,rely=0.60,anchor=tkinter.CENTER)
customtkinter.CTkLabel(app,text="Costos $",height=35,width=10).place(relx=0.3,rely=0.67,anchor=tkinter.CENTER)
customtkinter.CTkLabel(app,text="0 - 100",height=35,width=10).place(relx=0.4,rely=0.60,anchor=tkinter.CENTER)
customtkinter.CTkLabel(app,text="101 - 200",height=35,width=10).place(relx=0.5,rely=0.60,anchor=tkinter.CENTER)
customtkinter.CTkLabel(app,text="+ 200",height=35,width=10).place(relx=0.6,rely=0.60,anchor=tkinter.CENTER)

customtkinter.CTkLabel(simu_frame,text="Pedidos",height=35,width=10).place(relx=0.4,rely=0.25,anchor=tkinter.CENTER)

#Botones
boton_borrar = customtkinter.CTkButton(inputs_frame, text="Borrar",command=borrar,height=35,width=150,fg_color="gray",text_color="black")
boton_borrar.place(relx=0.5,rely=0.85,anchor=tkinter.CENTER)

boton_titulo = customtkinter.CTkButton(app,text="Dos Políticas Stock",hover_color="gray",fg_color="gray",bg_color="gray",height=35,width=1200).place(relx=0.5,rely=0.05,anchor=tkinter.CENTER)

boton_a = customtkinter.CTkButton(simu_frame,text="Plan A",height=35,width=100,command=politica_a).place(relx=0.3,rely=0.25,anchor=tkinter.CENTER)
boton_b = customtkinter.CTkButton(simu_frame,text="Plan B",height=35,width=100).place(relx=0.3,rely=0.75,anchor=tkinter.CENTER)

default = customtkinter.CTkButton(app,text="Setear con valores PDF",command=default,height=35,width=100).place(relx=0.65,rely=0.15,anchor=tkinter.CENTER)

app.mainloop() # Ejecuto loop visual
